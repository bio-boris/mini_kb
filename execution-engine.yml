version: "3.1"
#
services:
  registry:
    #    image: dockerhubwithsimpleapp
    image: registry
    ports:
      - "5000:5000"

  nginx:
    image: kbase/nginx:mini
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/openresty.conf.templ:/etc/nginx/nginx.conf"
      - "-template"
      - "/kb/deployment/conf/.templates/minikb-narrative.templ:/etc/nginx/sites-enabled/minikb-narrative"
      - "-template"
      - "/kb/deployment/conf/.templates/lua.templ:/etc/nginx/conf.d/lua"
      - "-stdout"
      - "/var/log/nginx/access.log"
      - "-stdout"
      - "/var/log/nginx/error.log"
      #  - "-env"
      #  - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/nginx-minikb.ini"
      - "nginx"
    env_file:
      - deployment/conf/nginx-minikb.ini
    # To bypass the nginx.conf.templ file and use a fully customized nginx.conf file, comment out the 2
    # -template option above that expends the nginx.conf.templ file, and uncomment the following 2 lines
    # and replace /tmp/nginx.conf with the path to the appropriate file.
    # volumes:
    #  - /tmp/nginx.conf:/etc/nginx/nginx,conf
    ports:
      - "80:80"
      - "443:443"
    depends_on: ["auth", "handle_service", "handle_manager", "ws",  "njs", "narrative_method_store",  "catalog"]

  narrative_method_store:
    image: kbase/narrative_method_store:develop
    command:
      - "-wait"
      - "tcp://auth:8080"
      - "-timeout"
      - "150s"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/http.ini.templ:/kb/deployment/services/narrative_method_store/start.d/http.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/server.ini.templ:/kb/deployment/services/narrative_method_store/start.d/server.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/start_server.sh.templ:/kb/deployment/bin/start_server.sh"
      - "-stdout"
      - "/kb/deployment/services/narrative_method_store/logs/request.log"
      - "/kb/deployment/bin/start_server.sh"
    env_file:
      - deployment/conf/nms-minikb.ini
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /refdata/:/kbase/data/sdk/ci/refdata
    depends_on: ["auth", "ci-mongo" ]

  #image: kbase/catalog:developer
  catalog:
    image: kbase/catalog:develop
    #image: catalogwithsimpleapp
    volumes:
      - /refdata/:/kbase/data/sdk/ci/refdata
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/:/tmp/
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deploy.minikb.cfg.templ:/kb/deployment/conf/deploy.cfg"
      - "-poll"
      - "-stderr"
      - "/kb/deployment/services/catalog/error.log"
      - "/kb/deployment/services/catalog/start_service"
    depends_on: ["auth", "ci-mongo", "narrative_method_store" ]
    env_file:
      - deployment/conf/catalog-minikb.ini

  condor:
    image: kbase/condor:latest
    hostname: condor
    environment:
      - POOL_PASSWORD=weakpassword
      - USE_TCP=True
    ports:
      - "9618:9618"
    entrypoint:
      - "/usr/bin/dockerize"
    command:
      - "-poll"
      - "-template"
      - "/etc/condor/.templates/condor_config.local.templ:/etc/condor/condor_config.local"
      - "-stdout"
      - "/var/log/condor/MasterLog"
      - "-stdout"
      - "/var/log/condor/SchedLog"
      - "/usr/sbin/start-condor.sh"
      #- "sleep"
      #- "36000"


  condor_worker_max:
    image: kbase/condor-worker:develop
    hostname: condor_worker_max
    command:
      - "-poll"
      - "-template"
      - "/kb/deployment/conf/.templates/condor_config_worker.templ:/etc/condor/condor_config.local"
      - "-template"
      - "/kb/deployment/conf/.templates/shared_port_config.templ:/etc/condor/config.d/shared_port_config"
      - "-timeout"
      - "120s"
      - "-stdout"
      - "/var/log/condor/ProcLog"
      - "-stdout"
      - "/var/log/condor/StartLog"
      - "/kb/deployment/bin/start-condor.sh"
    depends_on: ["condor"]
    environment:
      - POOL_PASSWORD=weakpassword
      - COLLECTOR_HOST=condor:9618?sock=collector
      - NUM_SLOTS=1
      - CLIENTGROUP="bigmem"
      - USE_TCP=True
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/condor:/mnt/condor
      - /sys/fs/cgroup:/sys/fs/cgroup
      # The line below DOES NOT WORK FOR MacOS, but should uncommented for Unix hosts
      # - /dev/log:/dev/log
  condor_worker_mini:
    image: kbase/condor-worker:develop
    hostname: condor_worker_mini
    command:
      - "-poll"
      - "-template"
      - "/kb/deployment/conf/.templates/condor_config_worker.templ:/etc/condor/condor_config.local"
      - "-template"
      - "/kb/deployment/conf/.templates/shared_port_config.templ:/etc/condor/config.d/shared_port_config"
      - "-timeout"
      - "120s"
      #     Use the euid and egid flags to set the uid/gid of the final process to be run. Note
      #     that the container must start as root for this to work in most situations
      #      - "-euid"
      #      - "998"
      #      - "-egid"
      #      - "997"
      - "-stdout"
      - "/var/log/condor/ProcLog"
      - "-stdout"
      - "/var/log/condor/StartLog"
      - "/kb/deployment/bin/start-condor.sh"
    #      - "sleep"
    #      - "10000"
    depends_on: ["condor"]
    environment:
      - POOL_PASSWORD=weakpassword
      - COLLECTOR_HOST=condor:9618?sock=collector
      - USE_TCP=True
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/condor:/mnt/condor
      - /sys/fs/cgroup:/sys/fs/cgroup
      # The line below DOES NOT WORK FOR MacOS, but should uncommented for Unix hosts
      # - /dev/log:/dev/log

  #- "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/njs-wrapper-minikb.ini"
  njs:
    image: kbase/ee2:develop
    command:
      - "-poll"
      - "-template"
      - "/kb/module/build/templates/condor_config.templ:/etc/condor/condor_config"
      - "-template"
      - "/kb/module/build/templates/minikb.templ:/kb/module/deploy.cfg"
      - "-timeout"
      - "120s"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://ws:8080"
      - "-stdout"
      - "/kb/deployment/jettybase/logs/request.log"
      - "./scripts/entrypoint.sh"
    entrypoint: [ "/kb/deployment/bin/dockerize" ]
    depends_on: ["auth", "ws", "ci-mongo","db-init","condor"]
    environment:
      - POOL_PASSWORD=weakpassword
    env_file: deployment/conf/ee2.ini
    volumes:
      - /mnt/condor:/mnt/condor
      - /mnt/condor/service.pid:/kb/deployment/services/catalog/service.pid
      - /mnt/condor/error.log:/kb/deployment/services/catalog/error.log


  njs_with_ssh:
    image: kbase/ee2:develop
    ports: ["23:22"]
    command:
      - "-poll"
      - "-template"
      - "/kb/module/build/templates/condor_config.templ:/etc/condor/condor_config"
      - "-template"
      - "/kb/module/build/templates/minikb.templ:/kb/module/deploy.cfg"
      - "-timeout"
      - "120s"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://ws:8080"
      - "-stdout"
      - "/kb/deployment/jettybase/logs/request.log"
      - "./scripts/entrypoint_with_ssh.sh"
    entrypoint: [ "/kb/deployment/bin/dockerize" ]
    depends_on: ["auth", "ws", "ci-mongo","db-init","condor"]
    environment:
      - POOL_PASSWORD=weakpassword
    env_file: deployment/conf/ee2.ini
    volumes:
      - /mnt/condor:/mnt/condor
      - /mnt/condor/service.pid:/kb/deployment/services/catalog/service.pid
      - /mnt/condor/error.log:/kb/deployment/services/catalog/error.log



  ws:
    image: kbase/kb_workspace:develop
    command:
      - "-poll"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/server.xml.templ:/kb/deployment/services/workspace/tomcat/conf/server.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/tomcat-users.xml.templ:/kb/deployment/services/workspace/tomcat/conf/tomcat-users.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/logging.properties.templ:/kb/deployment/services/workspace/tomcat/conf/logging.properties"
      - "-template"
      - "/kb/deployment/conf/.templates/setenv.sh.templ:/kb/deployment/services/workspace/tomcat/bin/setenv.sh"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/workspace-minikb.ini"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://handle_service:8080"
      - "-wait"
      - "tcp://shock:8080"
      - "-timeout"
      - "150s"
      - "-stdout"
      - "/kb/deployment/services/workspace/tomcat/logs/catalina.out"
      - "-stdout"
      - "/kb/deployment/services/workspace/tomcat/logs/access.log"
      - "/usr/share/tomcat8/bin/catalina.sh"
      - "run"
    #ports:
    #  - "7058:7058"
    depends_on: ["auth", "handle_service", "handle_manager", "ci-mongo","db-init", "shock"]
    # Mount this stuff in when running initialize.py is needed to reset workspace config

  shell:
    image: kbase/db_initialize
    entrypoint: [ "/bin/bash"]
    stdin_open: true
    tty: true
    volumes:
      - .:/home/workspace_deluxe

  handle_service:
    image: kbase/handle_service:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/handle_service-minikb.ini"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://shock:8080"
      - "-wait"
      - "tcp://ci-mysql:3306"
      - "-timeout"
      - "150s"
      - "starman"
      - "--listen"
      - ":8080"
      - "/kb/deployment/lib/Bio/KBase/AbstractHandle/AbstractHandle.psgi"
    environment:
      - KB_SERVICE_NAME=handle_service
    #ports:
    #  - "7109:7109"
    depends_on: ["handle_manager", "ci-mysql", "shock", "auth","db-init"]

  handle_manager:
    image: kbase/handle_mngr:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/handle_mngr-minikb.ini"
      - "-wait"
      - "tcp://auth:8080"
      - "-timeout"
      - "120s"
      - "starman"
      - "--listen"
      - ":8080"
      - "/kb/deployment/lib/Bio/KBase/HandleMngr/HandleMngr.psgi"
    #ports:
    #  - "9001:9001"
    depends_on: ["auth","db-init"]

  shock:
    image: kbase/kb_shock:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/shock-server.cfg.templ:/kb/deployment/conf/shock-server.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/shock-minikb.ini"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-timeout"
      - "150s"
      - "/kb/deployment/bin/shock-server"
      - "--conf"
      - "/kb/deployment/conf/shock-server.cfg"
    #ports:
    #  - "7044:7044"
    depends_on: ["ci-mongo", "db-init", "auth"]

  auth:
    image: kbase/kb_auth2:develop
    command:
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-timeout"
      - "120s"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/auth2-minikb.ini"
      - "/kb/deployment/bin/start_auth2.sh"
    #env_file:
    #  - deployment/conf/auth2-minikb.ini
    #ports:
    #  - "8080:8080"
    depends_on: ["ci-mongo","db-init"]

  db-init:
    image: kbase/db_initialize
    volumes:
      - ./mysqldump:/tmp/mysqldump
      - ./ws.mongodump:/tmp/ws.mongodump
      - ./bin:/tmp/bin
    entrypoint:
      - /kb/deployment/bin/dockerize.sh
      - -wait
      - tcp://ci-mysql:3306/
      - -wait
      - tcp://ci-mongo:27017
      - -timeout
      - 120s
      - /tmp/bin/initialize_all.sh
    depends_on: ['ci-mysql','ci-mongo']

  ci-mongo:
    image: mongo:2
    ports:
      - "27017:27017"
    command: --smallfiles

  ci-mongo-latest:
    image: mongo:latest
    ports:
      - "27018:27017"


  ci-mysql:
    image: mysql:5.5
    command:
      - "mysqld"
      - "--max_allowed_packet=64M"
      - "--wait-timeout=600"
      - "--innodb_log_buffer_size=32M"
      - "--innodb_buffer_pool_size=256M"
    #      - "--innodb_log_file_size=128M"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    #ports:
    #  - "3306:3306"
