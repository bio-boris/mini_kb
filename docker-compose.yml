version: "3.1"
#
services:
  nginx:
    image: kbase/nginx:mini
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/openresty.conf.templ:/etc/nginx/nginx.conf"
      - "-template"
      - "/kb/deployment/conf/.templates/minikb-narrative.templ:/etc/nginx/sites-enabled/minikb-narrative"
      - "-template"
      - "/kb/deployment/conf/.templates/lua.templ:/etc/nginx/conf.d/lua"
      - "-stdout"
      - "/var/log/nginx/access.log"
      - "-stdout"
      - "/var/log/nginx/error.log"
      - "nginx"
    env_file:
      - deployment/conf/nginx-minikb.ini
    # To bypass the nginx.conf.templ file and use a fully customized nginx.conf file, comment out the 2
    # -template option above that expends the nginx.conf.templ file, and uncomment the following 2 lines
    # and replace /tmp/nginx.conf with the path to the appropriate file.
    # volumes:
    #  - /tmp/nginx.conf:/etc/nginx/nginx,conf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      [
        "auth",
        "ws",
        "shock",
        "narrative_version",

        "narrative_method_store",
        "catalog",
      ]

  narrative_method_store:
    image: kbase/narrative_method_store:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/http.ini.templ:/kb/deployment/services/narrative_method_store/start.d/http.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/server.ini.templ:/kb/deployment/services/narrative_method_store/start.d/server.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/start_server.sh.templ:/kb/deployment/bin/start_server.sh"
      - "-stdout"
      - "/kb/deployment/services/narrative_method_store/logs/request.log"
      - "/kb/deployment/bin/start_server.sh"
    env_file:
      - deployment/conf/nms-minikb.ini
    depends_on: ["auth", "ci-mongo"]
  catalog:
    image: kbase/catalog:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deploy.cfg.templ:/kb/deployment/conf/deploy.cfg"
      - "-poll"
      - "-stderr"
      - "/kb/deployment/services/catalog/error.log"
      - "/kb/deployment/services/catalog/start_service"
    depends_on: ["auth", "ci-mongo", "narrative_method_store"]
    env_file:
      - deployment/conf/catalog-minikb.ini

  narrative_version:
    image: kbase/narrative_version:latest

  ws:
    image: kbase/kb_workspace:latest
    #image: a383f3c5d55b813e912b9324205bf5b6bc12fdc5f2c945e52c47112d6b4eb223
    command:
      - "-poll"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/server.xml.templ:/kb/deployment/services/workspace/tomcat/conf/server.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/tomcat-users.xml.templ:/kb/deployment/services/workspace/tomcat/conf/tomcat-users.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/logging.properties.templ:/kb/deployment/services/workspace/tomcat/conf/logging.properties"
      - "-template"
      - "/kb/deployment/conf/.templates/setenv.sh.templ:/kb/deployment/services/workspace/tomcat/bin/setenv.sh"
      - "-env"
      #- "https://raw.githubusercontent.com/bio-boris/mini_kb/master/deployment/conf/workspace-minikb.ini"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/workspace-minikb.ini"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://handle_service:8080"
      - "-wait"
      - "tcp://shock:8080"
      - "-timeout"
      - "150s"
      - "-stdout"
      - "/kb/deployment/services/workspace/tomcat/logs/catalina.out"
      - "-stdout"
      - "/kb/deployment/services/workspace/tomcat/logs/access.log"
      - "/usr/share/tomcat8/bin/catalina.sh"
      - "run"
    #ports:
    #  - "7058:7058"
    depends_on:
      [
        "auth",
        "handle_service",
        "handle_manager",
        "ci-mongo",
        "db-init",
        "shock",
      ]
    # Mount this stuff in when running initialize.py is needed to reset workspace config

  shell:
    image: kbase/db_initialize
    entrypoint: ["/bin/bash"]
    stdin_open: true
    tty: true
    volumes:
      - .:/home/workspace_deluxe

  handle_service:
    image: kbase/handle_service:develop
    command:
      - "-poll"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/handle_service-minikb.ini"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://shock:8080"
      - "-wait"
      - "tcp://ci-mysql:3306"
      - "-timeout"
      - "150s"
      - "starman"
      - "--listen"
      - ":8080"
      - "/kb/deployment/lib/Bio/KBase/AbstractHandle/AbstractHandle.psgi"
    environment:
      - KB_SERVICE_NAME=handle_service
    #ports:
    #  - "7109:7109"
    depends_on: ["handle_manager", "ci-mysql", "shock", "auth", "db-init"]

  shock:
    image: kbase/kb_shock:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/shock-server.cfg.templ:/kb/deployment/conf/shock-server.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/shock-minikb.ini"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-timeout"
      - "150s"
      - "/kb/deployment/bin/shock-server"
      - "--conf"
      - "/kb/deployment/conf/shock-server.cfg"
    #ports:
    #  - "7044:7044"
    depends_on: ["ci-mongo", "db-init", "auth"]

  handle_manager:
    image: kbase/handle_mngr:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/handle_mngr-minikb.ini"
      - "-wait"
      - "tcp://auth:8080"
      - "-timeout"
      - "120s"
      - "starman"
      - "--listen"
      - ":8080"
      - "/kb/deployment/lib/Bio/KBase/HandleMngr/HandleMngr.psgi"
    #ports:
    #  - "9001:9001"
    depends_on: ["auth", "db-init"]

  auth:
    image: kbase/kb_auth2:develop
    command:
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-timeout"
      - "120s"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/auth2-minikb.ini"
      - "/kb/deployment/bin/start_auth2.sh"
    #env_file:
    #  - deployment/conf/auth2-minikb.ini
    #ports:
    #  - "8080:8080"
    depends_on: ["ci-mongo", "db-init"]

  db-init:
    image: kbase/db_initialize
    volumes:
      - ./mysqldump:/tmp/mysqldump
      - ./ws.mongodump:/tmp/ws.mongodump
      - ./bin:/tmp/bin
    entrypoint:
      - /kb/deployment/bin/dockerize.sh
      - -wait
      - tcp://ci-mysql:3306/
      - -wait
      - tcp://ci-mongo:27017
      - -timeout
      - 120s
      - /tmp/bin/initialize_all.sh
    depends_on: ["ci-mysql", "ci-mongo"]

  ci-mongo:
    image: mongo:2
    ports:
      - "27017:27017"
    command: --smallfiles

  ci-mysql:
    image: mysql:5.5
    command:
      - "mysqld"
      - "--max_allowed_packet=64M"
      - "--wait-timeout=600"
      - "--innodb_log_buffer_size=32M"
      - "--innodb_buffer_pool_size=256M"
    #      - "--innodb_log_file_size=128M"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    #ports:
    #  - "3306:3306"
